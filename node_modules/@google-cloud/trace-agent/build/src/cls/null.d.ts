/// <reference types="node" />
import { EventEmitter } from 'events';
import { CLS, Func } from './base';
/**
 * A trivial implementation of continuation-local storage where context takes on
 * a default, immutable value.
 */
export declare class NullCLS<Context> implements CLS<Context> {
    private readonly defaultContext;
    private enabled;
    constructor(defaultContext: Context);
    isEnabled(): boolean;
    enable(): void;
    disable(): void;
    getContext(): Context;
    runWithContext<T>(fn: Func<T>): T;
    bindWithCurrentContext<T>(fn: Func<T>): Func<T>;
    patchEmitterToPropagateContext(ee: EventEmitter): void;
}
