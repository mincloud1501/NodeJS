import { TraceCLSConfig } from './cls';
import { OpenCensusPropagation, TracePolicy } from './config';
import { StackdriverTracer } from './trace-api';
import { PluginLoaderConfig } from './trace-plugin-loader';
import { TraceWriterConfig } from './trace-writer';
import { TracePolicyConfig } from './tracing-policy';
import { Component, Forceable, Singleton } from './util';
export declare type TopLevelConfig = Forceable<{
    enabled: boolean;
    logLevel: number;
    disableUntracedModulesWarning: boolean;
    clsConfig: Forceable<TraceCLSConfig>;
    writerConfig: Forceable<TraceWriterConfig>;
    pluginLoaderConfig: Forceable<PluginLoaderConfig>;
    tracePolicyConfig: TracePolicyConfig;
    overrides: {
        tracePolicy?: TracePolicy;
        propagation?: OpenCensusPropagation;
    };
}> | {
    enabled: false;
};
/**
 * A class that represents automatic tracing.
 */
export declare class Tracing implements Component {
    private readonly traceAgent;
    /** A logger. */
    private readonly logger;
    /** The configuration object for this instance. */
    private readonly config;
    /**
     * Constructs a new Tracing instance.
     * @param config The configuration for this instance.
     * @param traceAgent An object representing the custom tracing API.
     */
    constructor(config: TopLevelConfig, traceAgent: StackdriverTracer);
    /**
     * Logs an warning message detailing the list of modules that were loaded
     * before the Trace Agent. Loading these modules before the Trace Agent may
     * prevent us from monkeypatching those modules for automatic tracing.
     * @param filesLoadedBeforeTrace The list of files that were loaded using
     * require() before the Stackdriver Trace Agent was required.
     */
    logModulesLoadedBeforeTrace(filesLoadedBeforeTrace: string[]): void;
    /**
     * Enables automatic tracing support and the custom span API.
     */
    enable(): void;
    /**
     * Disables automatic tracing support. This disables the publicly exposed
     * custom span API, as well as any instances passed to plugins. This also
     * prevents the Trace Writer from publishing additional traces.
     */
    disable(): void;
}
export declare const tracing: Singleton<Tracing, TopLevelConfig, StackdriverTracer>;
